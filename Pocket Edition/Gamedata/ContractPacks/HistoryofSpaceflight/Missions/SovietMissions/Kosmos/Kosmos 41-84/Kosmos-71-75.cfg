CONTRACT_TYPE
{
	name = Kosmos-71-75
	group= KosmosMission
	title = Kosmos 71-75

	description = Kosmos 71-75 were Stella 1 type communications satellites. These satellites operate as mailboxes ("store-and-forward"): they remember the received messages and then resend them after scheduled time, or by command from the Earth. All 5 were released in orbit at the same time and it was hoped that natural drift would keep them apart. Each satellite had a mass of 50.0 kg and were launched by the Soviet Union store-and-forward"): they remember the received messages and then resend them after scheduled time, or by command from the Earth.

	synopsis = <color=yellow>Kosmos 71-75 were launched by a Kosmos-1 65S3 from the Tyuratam Launch Complex at the Baikonur Cosmodrome on July 16, 1965.</color>
	notes = Launch the Kosmos 71-75 communications satellites into a nearly circular low orbit.
	completedMessage = Mission Success!

	agent = USSR
	deadline = 90
	prestige = Trivial
	minExpiry = 90
	maxExpiry = 90
	cancellable = true
	declinable = true
	maxCompletions = 1
	maxSimultaneous = 1
	rewardScience = 3
	rewardReputation = 5
	rewardFunds = @HistoryofSpaceflight:Kerbucks105
	failureFunds = @HistoryofSpaceflight:Kerbucks1
	advanceFunds = @HistoryofSpaceflight:Kerbucks1

	PARAMETER
	{
		name = Kosmos 71-75
		type = VesselParameterGroup
		title = Launch the Kosmos 71-75 communications satellites into a nearly circular low orbit
		define = Kosmos-71

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			hidden = true
		}

		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
		}

		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel
			vessel = Kosmos-72
			hidden = True
		}

		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel
			vessel = Kosmos-73
			hidden = True
		}

		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel
			vessel = Kosmos-74
			hidden = True
		}

		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel
			vessel = Kosmos-75
			hidden = True
		}

		PARAMETER
		{
			name = Orbit
			type = Orbit
			targetBody = HomeWorld()
			//Multiplier is the relative altitude compared to body radius, found by dividing real altitude by real radius. Multiply this factor by the actual body radius to get the correct altitudes for any scale, any planet.
			minApA = (0.085 * (HomeWorld().Radius())) < HomeWorld().AtmosphereAltitude() ? HomeWorld().AtmosphereAltitude() : (0.085 * (HomeWorld().Radius()))
			minPeA = (0.082 * (HomeWorld().Radius())) < HomeWorld().AtmosphereAltitude() ? HomeWorld().AtmosphereAltitude() : (0.082 * (HomeWorld().Radius()))
			maxEccentricity = 0.01
			minInclination = 53
			maxInclination = 59

			PARAMETER
			{
				name = Duration
				type = Duration
				duration = 15s

				preWaitText = Verifying Orbit
				waitingText = Verifying Orbit
				completionText = Orbit Confirmed
			}
		}
	}

	PARAMETER
	{
		name = Kosmos-72
		type = VesselParameterGroup
		title = Deploy and rename to Kosmos 72 after the specified stable orbit is reached
		define = Kosmos-72

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			hidden = true
		}

		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
		}

		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel
			vessel = Kosmos-71
			hidden = True
		}
		
		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel
			vessel = Kosmos-73
			hidden = True
		}

		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel
			vessel = Kosmos-74
			hidden = True
		}
		

		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel
			vessel = Kosmos-75
			hidden = True
		}

		PARAMETER
		{
			name = Orbit
			type = Orbit
			targetBody = HomeWorld()
			//Multiplier is the relative altitude compared to body radius, found by dividing real altitude by real radius. Multiply this factor by the actual body radius to get the correct altitudes for any scale, any planet.
			minApA = (0.085 * (HomeWorld().Radius())) < HomeWorld().AtmosphereAltitude() ? HomeWorld().AtmosphereAltitude() : (0.085 * (HomeWorld().Radius()))
			minPeA = (0.082 * (HomeWorld().Radius())) < HomeWorld().AtmosphereAltitude() ? HomeWorld().AtmosphereAltitude() : (0.082 * (HomeWorld().Radius()))
			maxEccentricity = 0.01
			minInclination = 53
			maxInclination = 59
		}
	}

	PARAMETER
	{
		name = Kosmos-73
		type = VesselParameterGroup
		title = Deploy and rename to Kosmos 73 after the specified stable orbit is reached
		define = Kosmos-73

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			hidden = true
		}

		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
		}

		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel
			vessel = Kosmos-71
			hidden = True
		}
		
		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel
			vessel = Kosmos-72
			hidden = True
		}

		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel
			vessel = Kosmos-74
			hidden = True
		}
		

		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel
			vessel = Kosmos-75
			hidden = True
		}

		PARAMETER
		{
			name = Orbit
			type = Orbit
			targetBody = HomeWorld()
			//Multiplier is the relative altitude compared to body radius, found by dividing real altitude by real radius. Multiply this factor by the actual body radius to get the correct altitudes for any scale, any planet.
			minApA = (0.085 * (HomeWorld().Radius())) < HomeWorld().AtmosphereAltitude() ? HomeWorld().AtmosphereAltitude() : (0.085 * (HomeWorld().Radius()))
			minPeA = (0.082 * (HomeWorld().Radius())) < HomeWorld().AtmosphereAltitude() ? HomeWorld().AtmosphereAltitude() : (0.082 * (HomeWorld().Radius()))
			maxEccentricity = 0.01
			minInclination = 53
			maxInclination = 59
		}
	}

	PARAMETER
	{
		name = Kosmos-74
		type = VesselParameterGroup
		title = Deploy and rename to Kosmos 74 after the specified stable orbit is reached
		define = Kosmos-74

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			hidden = true
		}

		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
		}

		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel
			vessel = Kosmos-71
			hidden = True
		}
		
		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel
			vessel = Kosmos-72
			hidden = True
		}

		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel
			vessel = Kosmos-73
			hidden = True
		}
		

		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel
			vessel = Kosmos-75
			hidden = True
		}

		PARAMETER
		{
			name = Orbit
			type = Orbit
			targetBody = HomeWorld()
			//Multiplier is the relative altitude compared to body radius, found by dividing real altitude by real radius. Multiply this factor by the actual body radius to get the correct altitudes for any scale, any planet.
			minApA = (0.085 * (HomeWorld().Radius())) < HomeWorld().AtmosphereAltitude() ? HomeWorld().AtmosphereAltitude() : (0.085 * (HomeWorld().Radius()))
			minPeA = (0.082 * (HomeWorld().Radius())) < HomeWorld().AtmosphereAltitude() ? HomeWorld().AtmosphereAltitude() : (0.082 * (HomeWorld().Radius()))
			maxEccentricity = 0.01
			minInclination = 53
			maxInclination = 59
		}
	}

	PARAMETER
	{
		name = Kosmos-75
		type = VesselParameterGroup
		title = Deploy and rename to Kosmos 75 after the specified stable orbit is reached
		define = Kosmos-75

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			hidden = true
		}

		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
		}

		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel
			vessel = Kosmos-71
			hidden = True
		}
		
		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel
			vessel = Kosmos-72
			hidden = True
		}

		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel
			vessel = Kosmos-73
			hidden = True
		}
		

		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel
			vessel = Kosmos-74
			hidden = True
		}

		PARAMETER
		{
			name = Orbit
			type = Orbit
			targetBody = HomeWorld()
			//Multiplier is the relative altitude compared to body radius, found by dividing real altitude by real radius. Multiply this factor by the actual body radius to get the correct altitudes for any scale, any planet.
			minApA = (0.085 * (HomeWorld().Radius())) < HomeWorld().AtmosphereAltitude() ? HomeWorld().AtmosphereAltitude() : (0.085 * (HomeWorld().Radius()))
			minPeA = (0.082 * (HomeWorld().Radius())) < HomeWorld().AtmosphereAltitude() ? HomeWorld().AtmosphereAltitude() : (0.082 * (HomeWorld().Radius()))
			maxEccentricity = 0.01
			minInclination = 53
			maxInclination = 59
		}
	}

	REQUIREMENT
	{
          name = PreviousMission
          type = CompleteContract
          contractType = Kosmos-58
          minCount =1
          maxCount =1
          cooldownDuration = 0d
	}
}