CONTRACT_TYPE
{
	name = Ranger-4
	group= RangerMission
	title = Ranger 4

	description = Ranger 4 was designed to transmit pictures of the lunar surface to Earth stations during a period of 10 minutes of flight prior to impacting on the Moon, to rough-land a seismometer capsule on the Moon, to collect gamma-ray data in flight, to study radar reflectivity of the lunar surface, and to continue testing of the Ranger program for development of lunar and interplanetary spacecraft. An onboard computer failure caused failure of the deployment of the solar panels and navigation systems, the spacecraft impacted on the far side of the Moon without returning any scientific data. It had a mass of 331.2 kg.

	notes = Launch Ranger 4 towards @targetBody, fail to deploy your solar panels, run out of power, and impact the surface of @targetBody
	synopsis = <color=yellow>Ranger 4 was launched by an Atlas-Agena B on April 23, 1962 from the Cape Canaveral Launch Complex.</color>
	completedMessage = Mission Success!

	agent = NASA
	minExpiry = 90
	maxExpiry = 90
	cancellable = true
	declinable = true
	prestige = trivial
	maxCompletions = 1
	maxSimultaneous = 1
	rewardScience = 1
	rewardReputation = 3
	rewardFunds = @HistoryofSpaceflight:Kerbucks1
	failureFunds = @HistoryofSpaceflight:Kerbucks075
	advanceFunds = @HistoryofSpaceflight:Kerbucks075
	
	targetBody = HomeWorld().Children().First()
	
	PARAMETER
	{
        name = Ranger-4
        type = VesselParameterGroup
        define = Ranger-4

		PARAMETER 
		{
			name = NewVessel
			type = NewVessel
			hidden = true
		}

		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
		}

		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			partModule = ModuleDeployableSolarPanel
			title = Have at least 1 solar panel on this spacecraft
		}
		
		PARAMETER
		{
			name = ReachState
			type = ReachState
			targetBody = HomeWorld()
			situation = ORBITING
			disableOnStateChange = true
			title = Enter a parking orbit and proceed to a lunar impact trajectory
		}

		PARAMETER		
		{		
			name = HasResource		
			type = HasResource		
			resource = ElectricCharge		
			minQuantity = 0.0		
			maxQuantity = 0.0
			disableOnStateChange = true
			completeInSequence = true
			title = Fail to deploy solar panels and run out of electric charge on the way to @targetBody
		}
	}

	PARAMETER
	{		
		name = VesselDestroyed
		type = VesselDestroyed
		mustImpactTerrain = true
		title = Impact @targetBody
		targetBody = HomeWorld().Children().First()
		disableOnStateChange = true
	}
	
	REQUIREMENT
	{
        name = CompleteContract
        type = CompleteContract
        contractType = Ranger-3
        minCount =1
        maxCount =1
        cooldownDuration = 0d
	}
}