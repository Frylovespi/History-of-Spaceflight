CONTRACT_TYPE
{
	name = Kosmos-86-90
	group= KosmosMission
	title = Kosmos 86-90

	description = Kosmos 86-90 were Stella 1 type communications satellites. These satellites operate as mailboxes ("store-and-forward"): they remember the received messages and then resend them after scheduled time, or by command from the Earth. All 3 were released in orbit at the same time and it was hoped that natural drift would keep them apart. Each satellite had a mass of 50.0 kg and were launched by the Soviet Union store-and-forward"): they remember the received messages and then resend them after scheduled time, or by command from the Earth.

	notes = Launch the four Kosmos 86-90 Stella 1 type communications satellites into a medium Earth orbit.
	synopsis = <color=yellow>Kosmos 86-90 were launched by a Kosmos-1 65S3 from the Tyuratam Launch Complex at the Baikonur Cosmodrome on September 18, 1965.</color>
	completedMessage = Mission Success!

	agent = USSR
	deadline = 90
	prestige = Trivial
	minExpiry = 90
	maxExpiry = 90
	cancellable = true
	declinable = true
	maxCompletions = 1
	maxSimultaneous = 1
	rewardScience = 2
	rewardReputation = 5
	rewardFunds = @HistoryofSpaceflight:Kerbucks105
	failureFunds = @HistoryofSpaceflight:Kerbucks1
	advanceFunds = @HistoryofSpaceflight:Kerbucks1

	PARAMETER
	{
		name = Kosmos-86
		type = VesselParameterGroup
		title = Launch the Kosmos 86 Stella 1 communications satellite into orbit
		define = Kosmos-86

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			hidden = true
		}

		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel
			vessel = Kosmos-87
			hidden = True
		}

		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel
			vessel = Kosmos-88
			hidden = True
		}

		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel
			vessel = Kosmos-89
			hidden = True
		}

		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel
			vessel = Kosmos-90
			hidden = True
		}

		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
		}

		PARAMETER
		{
			name = Orbit
			type = Orbit
			targetBody = HomeWorld()
			//Multiplier is the relative altitude compared to body radius, found by dividing real altitude by real radius. Multiply this factor by the actual body radius to get the correct altitudes for any scale, any planet.
			minApA = (0.255 * (HomeWorld().Radius())) < HomeWorld().AtmosphereAltitude() ? HomeWorld().AtmosphereAltitude() : (0.255 * (HomeWorld().Radius()))
			minPeA = (0.202 * (HomeWorld().Radius())) < HomeWorld().AtmosphereAltitude() ? HomeWorld().AtmosphereAltitude() : (0.202 * (HomeWorld().Radius()))
			minEccentricity = 0.02
			minInclination = 53.1
			maxInclination = 59.1

			PARAMETER
			{
				name = Duration
				type = Duration
				duration = 15s

				preWaitText = Verifying Orbit
				waitingText = Verifying Orbit
				completionText = Orbit Confirmed
			}
		}
	}

	PARAMETER
	{
		name = Kosmos-87
		type = VesselParameterGroup
		title = Deploy and Re-name vessel to Kosmos 87 once the specified stable orbit is achieved
		define = Kosmos-87
		disableOnStateChange = False

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			hidden = true
		}

		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel
			vessel = Kosmos-86
			hidden = True
		}

		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel
			vessel = Kosmos-88
			hidden = True
		}

		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel
			vessel = Kosmos-89
			hidden = True
		}

		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel
			vessel = Kosmos-90
			hidden = True
		}

		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
		}

		PARAMETER
		{
			name = Orbit
			type = Orbit
			targetBody = HomeWorld()
			//Multiplier is the relative altitude compared to body radius, found by dividing real altitude by real radius. Multiply this factor by the actual body radius to get the correct altitudes for any scale, any planet.
			minApA = (0.255 * (HomeWorld().Radius())) < HomeWorld().AtmosphereAltitude() ? HomeWorld().AtmosphereAltitude() : (0.255 * (HomeWorld().Radius()))
			minPeA = (0.202 * (HomeWorld().Radius())) < HomeWorld().AtmosphereAltitude() ? HomeWorld().AtmosphereAltitude() : (0.202 * (HomeWorld().Radius()))
			minEccentricity = 0.02
			minInclination = 53.1
			maxInclination = 59.1
		}
	}

	PARAMETER
	{
		name = Kosmos-88
		type = VesselParameterGroup
		title = Deploy and Re-name vessel to Kosmos 88 once the specified stable orbit is achieved
		define = Kosmos-88
		disableOnStateChange = False

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			hidden = true
		}

		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel
			vessel = Kosmos-86
			hidden = True
		}

		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel
			vessel = Kosmos-87
			hidden = True
		}

		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel
			vessel = Kosmos-89
			hidden = True
		}

		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel
			vessel = Kosmos-90
			hidden = True
		}

		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
		}

		PARAMETER
		{
			name = Orbit
			type = Orbit
			targetBody = HomeWorld()
			//Multiplier is the relative altitude compared to body radius, found by dividing real altitude by real radius. Multiply this factor by the actual body radius to get the correct altitudes for any scale, any planet.
			minApA = (0.255 * (HomeWorld().Radius())) < HomeWorld().AtmosphereAltitude() ? HomeWorld().AtmosphereAltitude() : (0.255 * (HomeWorld().Radius()))
			minPeA = (0.202 * (HomeWorld().Radius())) < HomeWorld().AtmosphereAltitude() ? HomeWorld().AtmosphereAltitude() : (0.202 * (HomeWorld().Radius()))
			minEccentricity = 0.02
			minInclination = 53.1
			maxInclination = 59.1
		}
	}

	PARAMETER
	{
		name = Kosmos-89
		type = VesselParameterGroup
		title = Deploy and Re-name vessel to Kosmos 89 once the specified stable orbit is achieved
		define = Kosmos-89
		disableOnStateChange = False

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			hidden = true
		}

		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel
			vessel = Kosmos-86
			hidden = True
		}

		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel
			vessel = Kosmos-87
			hidden = True
		}

		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel
			vessel = Kosmos-88
			hidden = True
		}

		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel
			vessel = Kosmos-90
			hidden = True
		}

		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
		}

		PARAMETER
		{
			name = Orbit
			type = Orbit
			targetBody = HomeWorld()
			//Multiplier is the relative altitude compared to body radius, found by dividing real altitude by real radius. Multiply this factor by the actual body radius to get the correct altitudes for any scale, any planet.
			minApA = (0.255 * (HomeWorld().Radius())) < HomeWorld().AtmosphereAltitude() ? HomeWorld().AtmosphereAltitude() : (0.255 * (HomeWorld().Radius()))
			minPeA = (0.202 * (HomeWorld().Radius())) < HomeWorld().AtmosphereAltitude() ? HomeWorld().AtmosphereAltitude() : (0.202 * (HomeWorld().Radius()))
			minEccentricity = 0.02
			minInclination = 53.1
			maxInclination = 59.1
		}
	}

	PARAMETER
	{
		name = Kosmos-90
		type = VesselParameterGroup
		title = Deploy and Re-name vessel to Kosmos 90 once the specified stable orbit is achieved
		define = Kosmos-90
		disableOnStateChange = False

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			hidden = true
		}

		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel
			vessel = Kosmos-86
			hidden = True
		}

		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel
			vessel = Kosmos-87
			hidden = True
		}

		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel
			vessel = Kosmos-88
			hidden = True
		}

		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel
			vessel = Kosmos-89
			hidden = True
		}

		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
		}

		PARAMETER
		{
			name = Orbit
			type = Orbit
			targetBody = HomeWorld()
			//Multiplier is the relative altitude compared to body radius, found by dividing real altitude by real radius. Multiply this factor by the actual body radius to get the correct altitudes for any scale, any planet.
			minApA = (0.255 * (HomeWorld().Radius())) < HomeWorld().AtmosphereAltitude() ? HomeWorld().AtmosphereAltitude() : (0.255 * (HomeWorld().Radius()))
			minPeA = (0.202 * (HomeWorld().Radius())) < HomeWorld().AtmosphereAltitude() ? HomeWorld().AtmosphereAltitude() : (0.202 * (HomeWorld().Radius()))
			minEccentricity = 0.02
			minInclination = 53.1
			maxInclination = 59.1
		}
	}

	REQUIREMENT
	{
		name = PreviousMission
		type = CompleteContract
		contractType = Kosmos-85
		minCount =1
		maxCount =1
		cooldownDuration = 0d
	}
}